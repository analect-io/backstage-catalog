apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: devxp-app
  title: DevXP Web Application
  description: Create a new Web Application

  tags:
    - go
    - golang
    - recommended
    - website
    - component
    - helm
spec:
  owner: group:sre-team
  type: component

  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - system
        - lifecycle
        - owner
        - type
      properties:
        component_id:
          title: Name
          type: string
          pattern: "^([a-z0-9\\-]+)$"
          description: Unique name of the component
          ui:field: EntityNamePicker
          ui:autofocus: true
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        language:
          title: Language
          description: 'Application Language'
          type: string
          default: golang
          enum:
            - golang
            - python
            - php
        system:
          title: System
          type: string
          description: System of the component
          ui:field: EntityPicker
          ui:options:
            allowedKinds:
              - System
            defaultKind: System
        lifecycle:
          title: Lifecycle
          description: 'Application lifecycle'
          type: string
          default: experimental
          enum:
            - deprecated
            - experimental
            - production
        type:
          title: Type
          description: 'Application type'
          type: string
          default: service
          enum:
            - service
            - website
            - library
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - devxp-tech

    - title: Infrastructure
      properties:
        kube:
          title: Kubernetes Values
          description: Checking this will also create Kubernetes App
          type: boolean
          default: true
        env:
          title: Environment
          description: 'Environment to create resources'
          type: string
          default: dev
          enum:
            - dev
            - stg
            - prd
        autoscaling:
          title: Autoscaling
          description: Autoscaling Properties
          properties:
            enabled:
              title: enabled
              description: Enable autoscaling
              type: boolean
              default: true
            minReplicas:
              title: minReplicas
              description: Set min Replicas
              type: integer
              default: 1
            maxReplicas:
              title: maxReplicas
              description: Set max Replicas
              type: integer
              default: 2
            targetCPUUtilizationPercentage:
              title: targetCPUUtilizationPercentage
              description: Set target CPU Utilization Percentage
              type: integer
              default: 80
        resources:
          title: Resources
          description: Resources Properties
          properties:
            requests:
              title: requests
              description: Set requests
              properties:
                memory:
                  title: memory
                  description: Set Memory requests
                  type: string
                  default: 64Mi
                cpu:
                  title: cpu
                  description: Set CPU requests
                  type: string
                  default: 50m
            limits:
              title: limits
              description: Set limits
              properties:
                memory:
                  title: memory
                  description: Set Memory limits
                  type: string
                  default: 128Mi
                cpu:
                  title: cpu
                  description: Set CPU limits
                  type: string
                  default: 100m

        dryRun:
          title: Only perform a dry run, don't publish anything
          type: boolean
          default: false

  steps:
    - id: template
      name: Fetch Application Template
      action: fetch:template
      cookiecutterCompat: true
      input:
        url: https://github.com/devxp-tech/template-${{ parameters.language }}
        #copyWithoutRender:
        #  - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          system: ${{ parameters.system }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          lifecycle: ${{ parameters.lifecycle }}
          type: ${{ parameters.type }}
          env: ${{ parameters.env}}

    - id: publish
      name: Publish Application
      action: publish:github
      if: ${{ parameters.dryRun !== true }}
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        repoVisibility: public
        collaborators:
          - team: sre-team
            access: maintain
          - team: ${{ parameters.owner }}
            access: push

    - id: fetch-kube
      name: Fetch Kubernetes Templates
      action: fetch:template
      if: ${{ parameters.kube == true }}
      input:
        targetPath: ./kube
        url: https://github.com/devxp-tech/backstage-catalog/tree/main/devxp/skeleton/kubernetes/apps/devxp-app
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          autoscaling:  ${{ parameters.autoscaling.enabled }}
          minReplicas: ${{ parameters.autoscaling.minReplicas }}
          maxReplicas: ${{ parameters.autoscaling.maxReplicas }}
          targetCPUUtilizationPercentage: ${{ parameters.autoscaling.targetCPUUtilizationPercentage }}
          requests_memory: ${{ parameters.resources.requests.memory }}
          requests_cpu: ${{ parameters.resources.requests.cpu }}
          limits_memory: ${{ parameters.resources.limits.memory }}
          limits_cpu: ${{ parameters.resources.limits.cpu }}

    - id: gitops
      name: "Open PR in GitOps Repository"
      action: publish:github:pull-request
      if: ${{ parameters.kube == true }}
      input:
        repoUrl: github.com?repo=gitops&owner=devxp-tech
        branchName: create-${{ parameters.component_id }}
        title: ':robot: [backstage-bot] Create new App ${{ parameters.component_id }}'
        description: |
          # New project: ${{ parameters.component_id }}
          ${{ parameters.description if parameters.description }}
        sourcePath: kube
        targetPath: apps

    - id: register
      name: Register Application in Catalog
      action: catalog:register
      if: ${{ parameters.dryRun !== true }}
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

    # - name: Results
    #   if: ${{ parameters.dryRun }}
    #   action: debug:log
    #   input:
    #     listWorkspace: true

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: GitOps Pull Request
        url: ${{ steps.gitops.output.remoteUrl }}
      - title: Open Catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}